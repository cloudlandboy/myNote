{"id":"root","topic":"Hibernate02","expanded":true,"children":[{"id":"f6f68e7fa6112b2f","topic":"hibernate中的实体规则","expanded":false,"direction":"right","children":[{"id":"f6f69c7772faa42a","topic":"实体类创建的注意事项","expanded":false,"children":[{"id":"f6f6bba58e8ed61a","topic":"1.持久化类提供无参数构造","expanded":false},{"id":"f6f6bbbeb047615c","topic":"2.成员变量私有,提供公有get/set方法访问.需提供属性","expanded":false},{"id":"f6f6bbd77ef45120","topic":"3.持久化类中的属性,应尽量使用包装类型","expanded":false},{"id":"f6f6bbfae7763c93","topic":"4.持久化类需要提供oid.与数据库中的主键列对应","expanded":false},{"id":"f6f6c39a41ceac90","topic":"5.不要用final修饰class","expanded":false,"children":[{"id":"f6f6c60f0e0b5f51","topic":"hibernate使用cglib代理生成代理对象.代理对象是继承被代理对象.如果被final修饰.将无法生成代理.","expanded":false}]}]},{"id":"f6f69d0433272220","topic":"主键类型","expanded":false,"children":[{"id":"f6f6ca8fdcadda06","topic":"自然主键(少见)","expanded":false,"children":[{"id":"f6f6cc5acefeb898","topic":"表的业务列中,有某业务列符合：必须有,并且不重复的特征时,该列可以作为主键使用.","expanded":false}]},{"id":"f6f6d29a40b94305","topic":"代理主键(常见)","expanded":false,"children":[{"id":"f6f6d3c040ac375d","topic":"表的业务列中,没有某业务列符合：必须有,并且不重复的特征时,创建一个没有业务意义的列作为主键","expanded":false}]}]},{"id":"f6f69d19c0ff3562","topic":"主键生成策略","expanded":false,"children":[{"id":"f6f6dc6097b3e94f","topic":"代理主键","expanded":false,"children":[{"id":"f6f6dde371ea496d","topic":"identity : 主键自增.由数据库来维护主键值.录入时不需要指定主键.","expanded":false,"children":[{"id":"f6f6e0e620777c4c","topic":"sequence: Oracle中的主键生成策略.","expanded":false},{"id":"f6f6e1491d664a19","topic":"increment(了解): 主键自增.由hibernate来维护.每次插入前会先查询表中id最大值.+1作为新主键值.\t\t\t","expanded":false},{"id":"f6f6e17db4a766b3","topic":"hilo(了解): 高低位算法.主键自增.由hibernate来维护.开发时不使用.","expanded":false},{"id":"f6f6e19f1e717fcf","topic":"native:hilo+sequence+identity 自动三选一策略.","expanded":false},{"id":"f6f6ea2e7b057b23","topic":"uuid: 产生随机字符串作为主键. 主键类型必须为string 类型.","expanded":false}]}]},{"id":"f6f6ee97a4711882","topic":"自然主键","expanded":false,"children":[{"id":"f6f6f08d7ad9d44b","topic":"assigned:自然主键生成策略. hibernate不会管理主键值.由开发人员自己录入.","expanded":false}]}]}]},{"id":"f6f68f07db4adbb6","topic":"hibernate中的对象状态","expanded":false,"direction":"right","children":[{"id":"f6f6f5e6766b0c71","topic":"对象分为三种状态","expanded":false,"children":[{"id":"f6f6f86f8d7a6876","topic":"瞬时状态","expanded":false,"children":[{"id":"f6f6fc54b541187d","topic":"没有id,没有在session缓存中(刚new出来)","expanded":false}]},{"id":"f6f6f88c82956c7f","topic":"持久化状态","expanded":false,"children":[{"id":"f6f702a5ce5896d0","topic":"有id,在session缓存中(调用save方法，session没有关闭)","expanded":false}]},{"id":"f6f6f8a25edb0c42","topic":"游离|托管状态","expanded":false,"children":[{"id":"f6f70a756b0cbae0","topic":"有id,没有在session缓存中(session已经关闭)","expanded":false}]}]},{"id":"f6f71247cd0a7b10","topic":"三种状态的转换图","expanded":false,"children":[{"id":"f6f71c301cb39df5","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdIFH.png\" alt=\"4epi157i5kmf6bf263m9eg82mp.png\" border=\"0\" />","expanded":false}]}]},{"id":"f6f68f1bea4bfd8e","topic":"hibernate的一级缓存","expanded":false,"direction":"left","children":[{"id":"f6f724dcd43a098b","topic":"缓存:提高效率.hibernate中的一级缓存也是为了提高操作数据库的效率.","expanded":false},{"id":"f6f725a5c2fb1b54","topic":"提高效率手段1:提高查询效率","expanded":false,"children":[{"id":"f6f729f5b9df55fe","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdcS1.png\" alt=\"4fg3ui193cqqi2mtr316ca0nar.png\" border=\"0\" />","expanded":false}]},{"id":"f6f72a751fabfc09","topic":"提高效率手段2:减少不必要的修改语句发送(修改时比对缓存和快照中一致则不发送sql)","expanded":false,"children":[{"id":"f6f741537b1ac59a","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdfeO.png\" alt=\"0432p1m9r8qkqd92lkcfm4hj5d.png\" border=\"0\" />","expanded":false}]}]},{"id":"f6f68f321653828e","topic":"hibernate中的事务","expanded":false,"direction":"left","children":[{"id":"f6f75fa77926257b","topic":"事务","expanded":false,"children":[{"id":"f6f765d8b18aed86","topic":"事务特性","expanded":false,"children":[{"id":"f6f76bbcdabc023f","topic":"A 原子性","expanded":false},{"id":"f6f76d7a4bbf720e","topic":"C 一致性","expanded":false},{"id":"f6f76fe04503af48","topic":"I 隔离性","expanded":false},{"id":"f6f776858ce488e4","topic":"D 持久性","expanded":false}]},{"id":"f6f76644736cf3e2","topic":"事务并发问题","expanded":false,"children":[{"id":"f6f77f2ab906c041","topic":"1.脏读","expanded":false},{"id":"f6f77f9ed80bc63b","topic":"2.不可重复度","expanded":false},{"id":"f6f77fb507ddc2ed","topic":"3.幻|虚读","expanded":false}]},{"id":"f6f76660d62174c9","topic":"事务的隔离级别","expanded":false,"children":[{"id":"f6f7878a751e3564","topic":"读未提交- (123未解决)","expanded":false},{"id":"f6f78edfa5283c41","topic":"读已提交 - (23)","expanded":false},{"id":"f6f79331894cde92","topic":"可重复读(mysql默认级别)-(3)","expanded":false},{"id":"f6f797a54fadaba7","topic":"串行化 - 没有问题","expanded":false}]}]},{"id":"f6f7602191627bc6","topic":"如何在hibernate中指定数据库的隔离级别","expanded":false,"children":[{"id":"f6f7a0953dea4e56","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdhwD.png\" alt=\"18n138ec2m8usd19b45n99p664.png\" border=\"0\" />","expanded":false}]},{"id":"f6f7604603e7da97","topic":"在项目中如何管理事务","expanded":false,"children":[{"id":"f6f7a57c341c720c","topic":"业务开始之前打开事务,业务执行之后提交事务. 执行过程中出现异常.回滚事务.","expanded":false},{"id":"f6f7a62278ef7002","topic":"在dao层操作数据库需要用到session对象.在service控制事务也是使用session对象完成. 我们要确保dao层和service层使用的使用同一个session对象","expanded":false},{"id":"f6f7a645de5c9145","topic":"在hibernate中,确保使用同一个session的问题,hibernate已经帮我们解决了. 我们开发人员只需要调用sf.getCurrentSession()方法即可获得与当前线程绑定的session对象","expanded":false},{"id":"f6f7a66c24641ee5","topic":"注意1: 调用getCurrentSession方法必须配合主配置中的一段配置","expanded":false,"children":[{"id":"f6f7b1525b46e3c2","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdJWn.png\" alt=\"24f4mmskmlko55jfgfmmmu5fho.png\" border=\"0\" />","expanded":false}]},{"id":"f6f7bbfef571fa74","topic":"注意2:通过getCurrentSession方法获得的session对象.当事务提交时,session会自动关闭.不要手动调用close关闭.","expanded":false}]},{"id":"f6f7c78e81823f7f","topic":"案例","expanded":false,"children":[{"id":"f6f7c989fa11791d","topic":"service层","expanded":false,"children":[{"id":"f6f7d292e1538175","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdyWR.png\" alt=\"7j3b9ckua73sth452jr31j6cge.png\" border=\"0\" />","expanded":false}]},{"id":"f6f7cc3161e82954","topic":"dao层","expanded":false,"children":[{"id":"f6f7dacca36e3d67","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdBo4.png\" alt=\"1a01qsia8jmuci9pkkhhm793bn.png\" border=\"0\" />","expanded":false}]}]}]},{"id":"f6f68f50618e559b","topic":"hibernate中的批量查询","expanded":false,"direction":"right","children":[{"id":"f6f7dfd510d4b445","topic":"HQL查询-hibernate Query Language(多表查询,但不复杂时使用)","expanded":false,"children":[{"id":"f6f7e6d9b259e9ac","topic":"Hibernate独家查询语言,属于面向对象的查询语言","expanded":false},{"id":"f6f7eaf651886cc0","topic":"基本查询","expanded":false,"children":[{"id":"f6f7f032d30a2b87","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwrBGQ.png\" alt=\"20200104154137.png\" border=\"0\" />","expanded":false}]},{"id":"f6f7eb7083850d03","topic":"条件查询","expanded":false,"children":[{"id":"f6f81f1f994ae089","topic":"?号占位符","expanded":false,"children":[{"id":"f6f84706a353b242","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdaLT.png\" alt=\"0jpg7g5tcp4er6b3fpustv30pr.png\" border=\"0\" />","expanded":false},{"id":"f6f88382f253cdae","topic":"可以使用?1 ?2 ?3 ?4 这样指定占位符位置","expanded":false}]},{"id":"f6f81fb06b1d4642","topic":"命名占位符","expanded":false,"children":[{"id":"f6f8569a7b3c7266","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdoYd.png\" alt=\"14ru8ef673j85ee6h2m6l3kig7.png\" border=\"0\" />","expanded":false}]}]},{"id":"f6f7eb8aae558558","topic":"分页查询","expanded":false,"children":[{"id":"f6f862ca8e66d1cc","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lws0w6.png\" alt=\"20200104154830.png\" border=\"0\" />","expanded":false}]}]},{"id":"f6f7e2abe03e51e7","topic":"Criteria查询(单表条件查询)","expanded":false,"children":[{"id":"f6f8935f620070bc","topic":"Hibernate自创的无语句面向对象查询","expanded":false},{"id":"f6f893e8e5f86f8b","topic":"基本查询","expanded":false,"children":[{"id":"f6f8a3d26a164ff5","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdYzq.png\" alt=\"7pi1jbb6ct25im82eem3ksma5s.png\" border=\"0\" />","expanded":false}]},{"id":"f6f895f5d9cb47dc","topic":"条件查询","expanded":false,"children":[{"id":"f6f8aaab24521d61","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwd4Te.png\" alt=\"00i3osoqsl9ika668c0o79ctdp.png\" border=\"0\" />","expanded":false},{"id":"f6f8b2c963bf8893","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdgQx.png\" alt=\"12c0qs3sug39qtnb1gb4c5sbrq.png\" border=\"0\" />","expanded":false}]},{"id":"f6f89620fe2ee424","topic":"分页 查询","expanded":false,"children":[{"id":"f6f8bc3b438b20d2","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdrFJ.png\" alt=\"1eupi83oe5ee1egijjala5pd5q.png\" border=\"0\" />","expanded":false}]},{"id":"f6f898dc8e94dfb2","topic":"设置查询总记录数","expanded":false,"children":[{"id":"f6f8c4a6906a7c40","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdNQ0.png\" alt=\"5j7kkh5s5n1m28cfklrge6l9v5.png\" border=\"0\" />","expanded":false}]}]},{"id":"f6f7e3dfb906d253","topic":"原生SQL查询(复杂的业务查询)","expanded":false,"children":[{"id":"f6f8c96cc6d3930a","topic":"基本查询","expanded":false,"children":[{"id":"f6f8d54bcf83aec9","topic":"返回数组List","expanded":false,"children":[{"id":"f6f8daeef945ca51","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdGJs.png\" alt=\"0b21sck64oogafmdfb039v7555.png\" border=\"0\" />","expanded":false}]},{"id":"f6f8e53e9ee3de70","topic":"返回对象List","expanded":false,"children":[{"id":"f6f8ec11f31a8689","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwd2y6.png\" alt=\"4hhhhi6ana9jar4b7467ecj679.png\" border=\"0\" />","expanded":false}]}]},{"id":"f6f8c9d4e72a69e3","topic":"条件查询","expanded":false,"children":[{"id":"f6f8f76dd455e773","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdweU.png\" alt=\"7evegjvl7ma2nq514n3onofcsq.png\" border=\"0\" />","expanded":false}]},{"id":"f6f8c9e585318da9","topic":"分页查询","expanded":false,"children":[{"id":"f6f8fe4379b1759d","topic":"<img src=\"https://s2.ax1x.com/2020/01/04/lwdROK.png\" alt=\"1ht7j2krubuda1sjp8r4japk8r.png\" border=\"0\" />","expanded":false}]}]}]}]}