{"root":{"data":{"text":"mapper的xml文件（五）","expandState":"expand"},"children":[{"data":{"text":"鉴别器discriminator","expandState":"collapse"},"children":[{"data":{"text":"概念"},"children":[{"data":{"text":"有时一个单独的数据库查询也许返回很多不同 (但是希望有些关联) 数据类型的结果集"},"children":[]},{"data":{"text":"表现很像 Java 语言中的 switch 语句"},"children":[]}]},{"data":{"text":"例子","expandState":"collapse"},"children":[{"data":{"text":"<discriminator javaType=\"int\" column=\"vehicle_type\">\r\n    <case value=\"1\" resultMap=\"carResult\"/>\r\n    <case value=\"2\" resultMap=\"truckResult\"/>\r\n    <case value=\"3\" resultMap=\"vanResult\"/>\r\n    <case value=\"4\" resultMap=\"suvResult\"/>\r\n  </discriminator>"},"children":[]},{"data":{"id":"bztuywewlww0","created":1578836894647,"text":" ","image":"https://i.postimg.cc/bJvhYQCY/20200112214742.png","imageTitle":"0200112214742.png","imageSize":{"width":200,"height":127}},"children":[]}]}]},{"data":{"text":"缓存cache","expandState":"collapse"},"children":[{"data":{"text":"要开启二级缓存,你需要在你的 SQL 映射文件中添加一行<cache/>"},"children":[]},{"data":{"text":"<cache/>效果如下","expandState":"collapse"},"children":[{"data":{"text":"映射语句文件中的所有 select 语句将会被缓存。","priority":1},"children":[]},{"data":{"text":"映射语句文件中的所有 insert,update 和 delete 语句会刷新缓存。","priority":2},"children":[]},{"data":{"text":"缓存会使用 Least Recently Used(LRU,最近最少使用的)算法来收回。","priority":3},"children":[]},{"data":{"text":"根据时间表(比如 no Flush Interval,没有刷新间隔), 缓存不会以任何时间顺序 来刷新。","priority":4},"children":[]},{"data":{"text":"缓存会存储列表集合或对象(无论查询方法返回什么)的 1024 个引用。","priority":5},"children":[]},{"data":{"text":"缓存会被视为是 read/write(可读/可写)的缓存,意味着对象检索不是共享的,而 且可以安全地被调用者修改,而不干扰其他调用者或线程所做的潜在修改。","priority":6},"children":[]}]},{"data":{"text":"属性","expandState":"collapse"},"children":[{"data":{"text":"<cache\r\n  eviction=\"FIFO\"\r\n  flushInterval=\"60000\"\r\n  size=\"512\"\r\n  readOnly=\"true\"/>"},"children":[]},{"data":{"text":"以上配置创建了一个 FIFO 缓存,并每隔 60 秒刷新,存数结果对象或列表的 512 个引用,而且返回的对象被认为是只读的"},"children":[]}]},{"data":{"text":"收回策略","expandState":"collapse"},"children":[{"data":{"text":"LRU – 最近最少使用的:移除最长时间不被使用的对象。"},"children":[]},{"data":{"text":"FIFO – 先进先出:按对象进入缓存的顺序来移除它们。"},"children":[]},{"data":{"text":"SOFT – 软引用:移除基于垃圾回收器状态和软引用规则的对象。"},"children":[]},{"data":{"text":"WEAK – 弱引用:更积极地移除基于垃圾收集器状态和弱引用规则的对象"},"children":[]},{"data":{"text":"默认的是 LRU"},"children":[]}]}]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}