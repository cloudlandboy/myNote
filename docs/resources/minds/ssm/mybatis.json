{"root":{"data":{"text":"Mybatis","expandState":"expand"},"children":[{"data":{"id":"bzt0guvxpgg0","created":1578750847471,"text":"什么是 MyBatis","expandState":"collapse"},"children":[{"data":{"id":"bzt0guvxlmw0","created":1578750847471,"text":"MyBatis 是支持定制化 SQL、存储过程以及高级映射的优秀的持久层框架"},"children":[]},{"data":{"id":"bzt0guvygfk0","created":1578750847472,"text":"MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集"},"children":[]},{"data":{"id":"bzt0guvye0w0","created":1578750847472,"text":"MyBatis 可以对配置和原生Map使用简单的 XML 或注解，将接口和 Java 的 POJOs映射成数据库中的记录"},"children":[]}]},{"data":{"id":"bzt0hc7mvwg0","created":1578750885184,"text":"安装","expandState":"collapse"},"children":[{"data":{"id":"bzt0hl8eydc0","created":1578750904822,"text":"pom.xml 文件","note":"```\n\n<dependency>\n  <groupId>org.mybatis</groupId>\n  <artifactId>mybatis</artifactId>\n  <version>x.x.x</version>\n</dependency>\n\n```"},"children":[]}]},{"data":{"id":"bzt0duo8h740","created":1578750611913,"text":"与hibernate对比","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn4cf40","created":1578750838231,"text":"简介","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn4c4g0","created":1578750838231,"text":"mybatis","expandState":"expand"},"children":[{"data":{"id":"bzt0gqn4jyo0","created":1578750838231,"text":"iBATIS 的着力点，则在于POJO 与SQL之间的映射关系"},"children":[]},{"data":{"id":"bzt0gqn4emw0","created":1578750838231,"text":"然后通过映射配置文件，将SQL所需的参数，以及返回的结果字段映射到指定POJO"},"children":[]},{"data":{"id":"bzt0gqn4mu80","created":1578750838231,"text":"相对Hibernate“O/R”而言，iBATIS 是一种“Sql Mapping”的ORM实现"},"children":[]}]},{"data":{"id":"bzt0gqn43xc0","created":1578750838231,"text":"Hibernate","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn4hfs0","created":1578750838231,"text":"对数据库结构提供了较为完整的封装"},"children":[]},{"data":{"id":"bzt0gqn4m4g0","created":1578750838231,"text":"Hibernate的O/R Mapping实现了POJO 和数据库表之间的映射，以及SQL 的自动生成和执行"},"children":[]},{"data":{"id":"bzt0gqn49co0","created":1578750838231,"text":"Hibernate/OJB 会根据制定的存储逻辑，自动生成对应的SQL 并调用JDBC 接口加以执行"},"children":[]}]}]},{"data":{"id":"bzt0gqn4alk0","created":1578750838231,"text":"开发对比","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn4z9c0","created":1578750838232,"text":"mybatis","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn4yg00","created":1578750838232,"text":"Mybatis框架相对简单很容易上手，但也相对简陋些"},"children":[]},{"data":{"id":"bzt0gqn57x40","created":1578750838232,"text":"针对高级查询，Mybatis需要手动编写SQL语句，以及ResultMap"},"children":[]}]},{"data":{"id":"bzt0gqn4p0g0","created":1578750838232,"text":"Hibernate","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn54cg0","created":1578750838232,"text":"Hibernate的真正掌握要比Mybatis来得难些"},"children":[]},{"data":{"id":"bzt0gqn50gg0","created":1578750838232,"text":"Hibernate有良好的映射机制，开发者无需关心SQL的生成与结果映射，可以更专注于业务流程。"},"children":[]}]}]},{"data":{"id":"bzt0gqn4wv40","created":1578750838232,"text":"调优方案","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn4s3k0","created":1578750838232,"text":"mybatis","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn558g0","created":1578750838232,"text":"可以进行详细的SQL优化设计"},"children":[]},{"data":{"id":"bzt0gqn4x4o0","created":1578750838232,"text":"采用合理的Session管理机制；"},"children":[]}]},{"data":{"id":"bzt0gqn4z7s0","created":1578750838232,"text":"Hibernate","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn5s880","created":1578750838233,"text":"制定合理的缓存策略；"},"children":[]},{"data":{"id":"bzt0gqn5i200","created":1578750838233,"text":"尽量使用延迟加载特性；"},"children":[]},{"data":{"id":"bzt0gqn5qhc0","created":1578750838233,"text":"采用合理的Session管理机制；"},"children":[]},{"data":{"id":"bzt0gqn5k940","created":1578750838233,"text":"使用批量抓取，设定合理的批处理参数（batch_size）;"},"children":[]},{"data":{"id":"bzt0gqn5cq00","created":1578750838233,"text":"进行合理的O/R映射设计"},"children":[]}]}]},{"data":{"id":"bzt0gqn5bc00","created":1578750838233,"text":"扩展性方面","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn5o880","created":1578750838233,"text":"mybatis","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn5c4g0","created":1578750838233,"text":"MyBatis项目中所有的SQL语句都是依赖所用的数据库的，所以不同数据库类型的支持不好"},"children":[]}]},{"data":{"id":"bzt0gqn5ii00","created":1578750838233,"text":"Hibernate","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn5rio0","created":1578750838233,"text":"Hibernate与具体数据库的关联只需在XML文件中配置即可，所有的HQL语句与具体使用的数据库无关，移植性很好"},"children":[]}]}]},{"data":{"id":"bzt0gqn59140","created":1578750838233,"text":"缓存机制","expandState":"collapse","note":"相同点\nHibernate和Mybatis的二级缓存除了采用系统默认的缓存机制外，都可以通过实现你自己的缓存或为其他第三方缓存方案，创建适配器来完全覆盖缓存行为。\n\n不同点\nHibernate的二级缓存配置在SessionFactory生成的配置文件中进行详细配置，然后再在具体的表-对象映射中配置是那种缓存。\n\nMyBatis的二级缓存配置都是在每个具体的表-对象映射中进行详细配置，这样针对不同的表可以自定义不同的缓存机制。并且Mybatis可以在命名空间中共享相同的缓存配置和实例，通过Cache-ref来实现。\n\n两者比较\n因为Hibernate对查询对象有着良好的管理机制，用户无需关心SQL。所以在使用二级缓存时如果出现脏数据，系统会报出错误并提示。\n\n而MyBatis在这一方面，使用二级缓存时需要特别小心。如果不能完全确定数据更新操作的波及范围，避免Cache的盲目使用。否则，脏数据的出现会给系统的正常运行带来很大的隐患。"},"children":[{"data":{"id":"bzt0gqn5ehc0","created":1578750838233,"text":"mybatis","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn6bu00","created":1578750838234,"text":"默认情况下是没有开启缓存"},"children":[]},{"data":{"id":"bzt0gqn60ig0","created":1578750838234,"text":"要开启二级缓存,你需要在你的 SQL 映射文件中添加一行:  <cache/>"},"children":[]},{"data":{"id":"bzt0gqn6ci80","created":1578750838234,"text":"映射语句文件中的所有 select 语句将会被缓存","priority":1},"children":[]},{"data":{"id":"bzt0gqn68o00","created":1578750838234,"text":"映射语句文件中的所有 insert,update 和 delete 语句会刷新缓存","priority":2},"children":[]},{"data":{"id":"bzt0gqn64o00","created":1578750838234,"text":"缓存会使用 Least Recently Used(LRU,最近最少使用的)算法来收回","priority":3},"children":[]},{"data":{"id":"bzt0gqn6bc00","created":1578750838234,"text":"根据时间表(比如 no Flush Interval,没有刷新间隔), 缓存不会以任何时间顺序 来刷新。","priority":4},"children":[]},{"data":{"id":"bzt0gqn5y2w0","created":1578750838234,"text":"缓存会存储列表集合或对象(无论查询方法返回什么)的 1024 个引用。","priority":5},"children":[]},{"data":{"id":"bzt0gqn60n40","created":1578750838234,"text":"缓存会被视为是 read/write(可读/可写)的缓存,意味着对象检索不是共享的,而 且可以安全地被调用者修改,而不干扰其他调用者或线程所做的潜在修改。","priority":6},"children":[]}]},{"data":{"id":"bzt0gqn64rs0","created":1578750838234,"text":"Hibernate","expandState":"collapse"},"children":[{"data":{"id":"bzt0gqn66400","created":1578750838234,"text":"一级缓存是Session缓存，利用好一级缓存就需要对Session的生命周期进行管理好"},"children":[]},{"data":{"id":"bzt0gqn6c8g0","created":1578750838234,"text":"二级缓存是SessionFactory级的缓存，分为内置缓存和外置缓存","note":"内置缓存中存放的是SessionFactory对象的一些集合属性包含的数据(映射元素据及预定SQL语句等),对于应用程序来说,它是只读的。\n\n外置缓存中存放的是数据库数据的副本,其作用和一级缓存类似.二级缓存除了以内存作为存储介质外,还可以选用硬盘等外部存储设备。二级缓存称为进程级缓存或SessionFactory级缓存，它可以被所有session共享，它的生命周期伴随着SessionFactory的生命周期存在和消亡。"},"children":[]}]}]},{"data":{"id":"bzt0gqn5xpk0","created":1578750838234,"text":"对比总结","expandState":"collapse"},"children":[{"data":{"id":"bzt0dxuisuo0","created":1578750618824,"text":"mybatis","expandState":"collapse"},"children":[{"data":{"id":"bzt0dxujw540","created":1578750618825,"text":"MyBatis可以进行更为细致的SQL优化，可以减少查询字段。"},"children":[]},{"data":{"id":"bzt0dxuju8o0","created":1578750618825,"text":"MyBatis容易掌握，而Hibernate门槛较高。"},"children":[]}]},{"data":{"id":"bzt0dxuv94w0","created":1578750618844,"text":"Hibernate","expandState":"collapse"},"children":[{"data":{"id":"bzt0dxuuzlk0","created":1578750618844,"text":"Hibernate的DAO层开发比MyBatis简单，Mybatis需要维护SQL和结果映射。"},"children":[]},{"data":{"id":"bzt0dxuvuiw0","created":1578750618845,"text":"Hibernate对对象的维护和缓存要比MyBatis好，对增删改查的对象的维护要方便。"},"children":[]},{"data":{"id":"bzt0dxuvamo0","created":1578750618845,"text":"Hibernate数据库移植性很好，MyBatis的数据库移植性不好，不同的数据库需要写不同SQL。"},"children":[]},{"data":{"id":"bzt0dxuvqyw0","created":1578750618845,"text":"Hibernate有更好的二级缓存机制，可以使用第三方缓存。MyBatis本身提供的缓存机制不佳。"},"children":[]}]}]}]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}