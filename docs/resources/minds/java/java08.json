{"root":{"data":{"text":"java面对对象三大特性"},"children":[{"data":{"text":"继承","expandState":"collapse"},"children":[{"data":{"text":"概念","expandState":"collapse"},"children":[{"data":{"text":"继承通过extends关键字来实现,其中SubClass称为子类,SuperClass称为父类,基类,或超类"},"children":[]}]},{"data":{"text":"作用","expandState":"collapse"},"children":[{"data":{"text":"代码重用，代码复用"},"children":[]}]},{"data":{"text":"单继承","expandState":"collapse"},"children":[{"data":{"text":"一个类，只能继承一个父类"},"children":[]},{"data":{"text":"一个类，可以有多个子类"},"children":[]}]},{"data":{"text":"不继承","expandState":"collapse"},"children":[{"data":{"text":"构造方法不继承"},"children":[]},{"data":{"text":"没有访问权限的成员不继承"},"children":[]},{"data":{"text":"静态成员不继承"},"children":[]}]}]},{"data":{"text":"多态","expandState":"collapse"},"children":[{"data":{"text":"多态指的是编译器（申明变量是）和运行期（创建对象后）表现为不同的形态（数据类型）"},"children":[]},{"data":{"text":"三个条件","expandState":"collapse"},"children":[{"data":{"text":"继承的存在(继承是多态的基础,没有继承就没有多态)"},"children":[]},{"data":{"text":"子类重写父类的方法(多态下调用子类重写的方法)"},"children":[]},{"data":{"text":"父类引用变量指向子类对象(子类到父类的类型转换)"},"children":[]}]},{"data":{"text":"子类转父类规则","expandState":"collapse"},"children":[{"data":{"text":"将一个父类的引用指向一个子类的对象,称为向上转型(upcastiog),自动进行类型转换."},"children":[]},{"data":{"text":"此时通过父类引用调用的方法是子类覆盖或继承父类的方法,不是父类的方法."},"children":[]},{"data":{"text":"此时通过父类引用变量无法调用子类特有的方法"},"children":[]},{"data":{"text":"如果父类要调用子类的特有方法就得将一个指向子类对象的父类引用赋给一个子类的引用,称为向下转型,此时必须进行强制类型转换"},"children":[]}]}]},{"data":{"text":"封装","expandState":"collapse"},"children":[{"data":{"text":"访问控制符","expandState":"collapse"},"children":[{"data":{"text":"private","expandState":"collapse"},"children":[{"data":{"text":"成员变量和方法只能在类内被访问,具有类可见性."},"children":[]}]},{"data":{"text":"default","expandState":"collapse"},"children":[{"data":{"text":"成员变量和方法只能被同一个包里的类访问,具有包可见性"},"children":[]}]},{"data":{"text":"protected","expandState":"collapse"},"children":[{"data":{"text":"可以被同一个包中的类访问,被同一个项目中不同包中的子类访问"},"children":[]}]},{"data":{"text":"public","expandState":"collapse"},"children":[{"data":{"text":"可以被同一个项目中所有类访问,具有项目可见性,这是最大的访问权限"},"children":[]}]}]},{"data":{"text":"好处","expandState":"collapse"},"children":[{"data":{"text":"隐藏类的实现细节"},"children":[]},{"data":{"text":"让使用者只能通过程序员规定的方法来访问数据"},"children":[]},{"data":{"text":"可以方便的加入存取控制语句,限制不合理操作"},"children":[]}]},{"data":{"text":"具体步骤","expandState":"collapse"},"children":[{"data":{"text":"修改属性的可见性来限制对属性的访问"},"children":[]},{"data":{"text":"为每个属性创建一对赋值(setter)方法和取值(getter)方法，用于对这些属性的存取"},"children":[]},{"data":{"text":"在赋值方法中,加入对属性的存取控制语句"},"children":[]}]}]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}