{"root":{"data":{"text":"DispatcherServlet"},"children":[{"data":{"text":"1、Controller","expandState":"expand","note":"处理器/页面控制器，做的是MVC中的C的事情，但控制逻辑转移到前端控制器了，用于对请求进行处理；"},"children":[]},{"data":{"text":"2、HandlerMapping","note":"请求到处理器的映射，如果映射成功返回一个HandlerExecutionChain对象（包含一个Handler处理器（页面控制器）对象、多个HandlerInterceptor拦截器对象；如BeanNameUrlHandlerMapping将URL与Bean名字映射，映射成功的Bean就是此处的处理器；"},"children":[]},{"data":{"text":"3、HandlerAdapter","note":"HandlerAdapter将会把处理器包装为适配器，从而支持多种类型的处理器，即适配器设计模式的应用，从而很容易支持很多类型的处理器；如SimpleControllerHandlerAdapter将对实现了Controller接口的Bean进行适配，并且调用处理器的handleRequest方法进行功能处理；"},"children":[]},{"data":{"text":"4、ViewResolver","note":"ViewResolver将把逻辑视图名解析为具体的View，通过这种策略模式，很容易更换其他视图技术；如InternalResourceViewResolver将逻辑视图名映射为jsp视图；"},"children":[]},{"data":{"text":"5、LocalResover","note":"本地化解析，因为Spring支持国际化，因此LocalResover解析客户端的Locale信息从而方便进行国际化；"},"children":[]},{"data":{"text":"6、ThemeResovler","note":"主题解析，通过它来实现一个页面多套风格，即常见的类似于软件皮肤效果；"},"children":[]},{"data":{"text":"7、MultipartResolver","note":"文件上传解析，用于支持文件上传；"},"children":[]},{"data":{"text":"8、HandlerExceptionResolver","note":"处理器异常解析，可以将异常映射到相应的统一错误界面，从而显示用户友好的界面（而不是给用户看到具体的错误信息）；"},"children":[]},{"data":{"text":"9、RequestToViewNameTranslator","layout_mind_offset":{"x":-27.99998170274921,"y":-1},"note":"当处理器没有返回逻辑视图名等相关信息时，自动将请求URL映射为逻辑视图名；"},"children":[]},{"data":{"text":"10、FlashMapManager","note":"用于管理FlashMap的策略接口，FlashMap用于存储一个请求的输出，当进入另一个请求时作为该请求的输入，通常用于重定向场景，后边会细述。","layout":null},"children":[]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}