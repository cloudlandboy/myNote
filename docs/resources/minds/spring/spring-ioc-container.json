{"root":{"data":{"text":"ioc容器","expandState":"expand","note":"**在Spring框架中的核心组件只有三个：**\t\n`Core`、`Context`和`Bean`。它们构建起了整个Spring的骨骼架构，没有它们就不可能有`AOP`、`Web`等特性功能。\n\n如果说在三个核心中再选出一个核心，那就非Bean莫属了。可以说，Spring就是面向Bean的编程，Bean在Spring中才是真正的主角。\n\n**Spring为何如此流行？**\n你会发现Spring解决了一个非常关键的问题，它可以让你对对象之间的关系转而用配置文件来管理，或者注解，也就是它的依赖注入机制。而这个注入关系在一个叫Ioc的容器中管理。Ioc容器就是被Bean包裹的对象。Spring正是通过把对象包装在Bean中从而达到管理这些对象及做一些列额外操作的目的。\n"},"children":[{"data":{"text":"概念","expandState":"collapse"},"children":[{"data":{"text":"在每个框架的中都有一个容器的概念，所谓的容器就是将常用的服务，封装起来，然后，用户只需要遵循一定的规则，就可以达到统一、灵活、安全、方便、快速的目的"},"children":[]},{"data":{"text":"具有依赖注入功能的容器，负责实例化、定位、配置应用程序中的对象及建立这些对象间的依赖"},"children":[]}]},{"data":{"text":"Bean的概念","expandState":"collapse"},"children":[{"data":{"text":"由IoC容器管理的那些组成你应用程序的对象我们就叫它Bean"},"children":[]},{"data":{"text":"Bean就是由Spring容器初始化、装配及管理的对象，除此之外，bean就与应用程序中的其他对象没有什么区别了"},"children":[]}]},{"data":{"text":"元数据BeanDefinition","expandState":"collapse"},"children":[{"data":{"text":"确定如何实例化Bean、管理Bean之间的依赖关系以及管理Bean，这就需要配置元数据，在Spring中由BeanDefinition代表"},"children":[]}]},{"data":{"text":"如何工作的","expandState":"collapse"},"children":[{"data":{"text":"以xml配置方式，简单解释"},"children":[]},{"data":{"text":"准备配置文件","priority":1,"expandState":"collapse"},"children":[{"data":{"text":"配置文件中声明Bean定义也就是为Bean配置元数据。"},"children":[]}]},{"data":{"text":"由IoC容器进行解析元数据","priority":2,"expandState":"collapse"},"children":[{"data":{"text":"IoC容器的Bean Reader读取并解析配置文件，根据定义生成BeanDefinition配置元数据对象，IoC容器根据BeanDefinition进行实例化、配置及组装Bean"},"children":[]}]},{"data":{"text":"实例化IoC容器","priority":3,"expandState":"collapse"},"children":[{"data":{"text":"由客户端实例化容器，获取需要的Bean"},"children":[]}]},{"data":{"id":"bzum42qi5jk0","created":1578913470197,"text":" ","image":"https://upload-images.jianshu.io/upload_images/4120002-20a10b10864014de.png","imageTitle":"","imageSize":{"width":200,"height":15}},"children":[]},{"data":{"id":"bzumdpiifuo0","created":1578914225058,"text":" ","image":"https://upload-images.jianshu.io/upload_images/4120002-321b0f605bce31ed.jpg","imageTitle":"","imageSize":{"width":200,"height":107}},"children":[]}]},{"data":{"text":"hello world","expandState":"expand","note":"```\n\n@Test \npublic void testHelloWorld() { \n\n    //1、读取配置文件实例化一个IoC容器 \n    ApplicationContext context = new ClassPathXmlApplicationContext(\"helloworld.xml\"); \n\n    //2、从容器中获取Bean，注意此处完全“面向接口编程，而不是面向实现” \n    HelloApi helloApi = context.getBean(\"hello\", HelloApi.class); \n\n    //3、执行业务逻辑 \n    helloApi.sayHello(); \n\n}\n\n```"},"children":[]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}